WITH 
--group_a_con extracts the conversion date and the sum of the total spent per unique user in group A
group_a_con AS (SELECT DISTINCT(us.id), gr.group AS group_name,  MIN(ac.dt) AS conv_date, SUM(ac.spent) AS total_spent
                FROM users AS us
                FULL JOIN activity AS ac
                ON us.id = ac.uid
                JOIN groups AS gr
                ON us.id = gr.uid
                WHERE gr.group = 'A'
                GROUP BY us.id, gr.group),             
--group_a_tot extract the total users in group A grouped by the joining date                  
group_a_tot AS (SELECT gr.join_dt AS join_date, COUNT(us.id) AS total_users
                FROM users AS us
                JOIN groups AS gr
                ON us.id = gr.uid
                WHERE gr.group = 'A'
                GROUP BY join_date),
--group_a calculates the number of conversions, the amount spent and the total number of users grouped by date for group A
group_a AS (SELECT 
            group_name, 
            conv_date AS date, 
            SUM(COUNT(id)) OVER (ORDER BY conv_date) AS conversions,
            SUM(SUM(total_spent)) OVER (ORDER BY conv_date) AS spent,
            SUM(MIN(total_users)) OVER (ORDER BY conv_date) AS total
            FROM group_a_con
            JOIN group_a_tot ON conv_date = join_date
            GROUP BY conv_date, group_name
            ORDER BY conv_date),
--group_a_km calculates the key metrics of group A (conversion_rate and average_spent) rounded and grouped by date
group_a_km AS (SELECT 
               group_name, 
               date, 
               ROUND((SUM(conversions) / SUM(total)), 6) AS conversion_rate,
               ROUND((SUM(spent) / SUM(total)), 2) AS average_spent
               FROM group_a
               GROUP BY date, group_name
               ORDER BY date),
--group_b_con extracts the conversion date and the sum of the total spent per unique user in group A
group_b_con AS (SELECT DISTINCT(us.id), gr.group AS group_name,  MIN(ac.dt) AS conv_date, SUM(ac.spent) AS total_spent
                FROM users AS us
                FULL JOIN activity AS ac
                ON us.id = ac.uid
                JOIN groups AS gr
                ON us.id = gr.uid
                WHERE gr.group = 'B'
                GROUP BY us.id, gr.group),
--group_b_tot extract the total users in group B grouped by the joining date            
group_b_tot AS (SELECT gr.join_dt AS join_date, COUNT(us.id) AS total_users
                FROM users AS us
                JOIN groups AS gr
                ON us.id = gr.uid
                WHERE gr.group = 'B'
                GROUP BY join_date),
--group_b calculates the number of conversions, the amount spent and the total number of users grouped by date for group B    
group_b AS (SELECT 
            group_name, 
            conv_date AS date, 
            SUM(COUNT(id)) OVER (ORDER BY conv_date) AS conversions,
            SUM(MIN(total_users)) OVER (ORDER BY conv_date) AS total,
            SUM(SUM(total_spent)) OVER (ORDER BY conv_date) AS spent
            FROM group_b_con
            JOIN group_b_tot ON conv_date = join_date
            GROUP BY conv_date, group_name
            ORDER BY conv_date),
--group_b_km calculates the key metrics of group B (conversion_rate and average_spent) rounded and grouped by date
group_b_km AS (SELECT 
               group_name, 
               date, 
               ROUND((SUM(conversions) / SUM(total)), 6) AS conversion_rate,
               ROUND((SUM(spent) / SUM(total)), 2) AS average_spent
               FROM group_b
               GROUP BY date, group_name
               ORDER BY date)

--The final step was merging both key metrics tables vertically to later visualize resulting CSV in Tableau
SELECT * FROM group_a_km
UNION ALL
SELECT * FROM group_b_km
ORDER BY group_name
